// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/checkStatus": {
            "post": {
                "description": "根据项目名称检查该项目的状态",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "检查项目状态",
                "parameters": [
                    {
                        "type": "string",
                        "description": "项目名称",
                        "name": "name",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "成功响应",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/api.Resp"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/api.CheckStatusResp"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "错误响应",
                        "schema": {
                            "$ref": "#/definitions/api.Resp"
                        }
                    }
                }
            }
        },
        "/setStatus": {
            "put": {
                "description": "根据项目名称和状态更新该项目的状态",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "设置项目状态",
                "parameters": [
                    {
                        "description": "项目状态更新请求",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.SetStatusReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "成功响应",
                        "schema": {
                            "$ref": "#/definitions/api.Resp"
                        }
                    },
                    "400": {
                        "description": "认证失败或其他错误",
                        "schema": {
                            "$ref": "#/definitions/api.Resp"
                        }
                    },
                    "500": {
                        "description": "保存失败",
                        "schema": {
                            "$ref": "#/definitions/api.Resp"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "api.CheckStatusResp": {
            "type": "object",
            "properties": {
                "status": {
                    "type": "boolean"
                }
            }
        },
        "api.Resp": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer"
                },
                "data": {},
                "msg": {
                    "type": "string"
                }
            }
        },
        "api.SetStatusReq": {
            "type": "object",
            "properties": {
                "password": {
                    "type": "string"
                },
                "programs_name": {
                    "type": "string"
                },
                "status": {
                    "type": "boolean"
                },
                "username": {
                    "type": "string"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "",
	Host:             "",
	BasePath:         "",
	Schemes:          []string{},
	Title:            "",
	Description:      "",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
